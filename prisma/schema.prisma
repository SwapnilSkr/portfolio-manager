generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  name         String?
  phone        String?
  role         Role?     @default(USER)
  writtenBlogs Blog[]
  likedBlogs   Like[]
  comments     Comment[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Blog {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  likes     Like[]
  comments  Comment[]
}

model Comment {
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  blog      Blog     @relation(fields: [blogId], references: [id])
  blogId    Int

  @@id([authorId, blogId])
}

model Like {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  blog   Blog @relation(fields: [blogId], references: [id])
  blogId Int

  @@id([userId, blogId])
}

model Chamber {
  id          Int      @id @default(autoincrement())
  chamberName String
  address     String
  mobile      String
  timings     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Service {
  id        Int      @id @default(autoincrement())
  name      String
  points    String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Expertise {
  id        Int      @id @default(autoincrement())
  name      String
  para1     String
  para2     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
